- name: Create pi-hole directories
  file:
    path: "/home/{{ ansible_user }}/homelab/pihole"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: 0755

- name: Determine Pi-hole's host IPs
  set_fact:
    pihole_local_ipv4: "{{ ansible_host }}"

- name: Start/Update Pi-hole container
  docker_container:
    container_default_behavior: "no_defaults"
    name: "pihole"
    image: "{{ pihole_image }}"
    pull: yes
    restart_policy: "unless-stopped"
    env:
      TZ: "{{ timezone }}"
      WEBPASSWORD: "{{ pihole_webpassword }}"
      PIHOLE_DNS_: "{{ pihole_dns }}"
      DNSMASQ_LISTENING: " {{ pihole_dnsmasq_listening }}"
      REV_SERVER: "{{ pihole_rev_server }}"
      # REV_SERVER_DOMAIN: "{{ pihole_rev_server_domain }}"
      REV_SERVER_TARGET: "{{ pihole_rev_server_target }}"
      REV_SERVER_CIDR: "{{ pihole_rev_server_cidr }}"
      FTLCONF_MAXDBDAYS: "{{ pihole_ftl_max_db_days }}"
    dns_servers:
      - 127.0.0.1
      - "{{ static_dns }}"
    ports:
      - 80:80
      - 53:53/udp
      - 53:53/tcp
    volumes:
      - "/home/{{ ansible_user }}/homelab/pihole/etc-pihole/:/etc/pihole/"
      - "/home/{{ ansible_user }}/homelab/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/"
    log_driver: json-file
    log_options:
      max-size: "10m"
      max-file: "5"

- name: Check pihole container
  uri:
    url: http://localhost/admin
  register: result
  until: result.status == 200
  retries: 5
  delay: 10

- name: Remove old image versions
  docker_prune:
    images: yes
    images_filters:
      dangling: false

- name: INFORMATION
  debug:
    msg:
      - "DNSv4: {{ pihole_local_ipv4 }}"